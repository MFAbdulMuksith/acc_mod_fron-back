# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

name: 'Accounts Modules Production Pipeline'

trigger:
  branches:
    include:
      - main

resources:
  - repo: self

variables:
  # containerRegistry: 'docker_registry_service_connection'
  # dockerHubAccount: 'abdmuksith'
  # dockerAccessToken: "toxvkh55cgqoefdixja5gbefkrm2ebd5im6auvp6ixj6rrx3pvfi"
  # frontImage: 'frontend_azure_pipeline'
  # backImage: 'backend_azure_pipeline'
  # dockerComposeFile: './docker-compose.image.yaml'
  frontRepository: 'abdmuksith/frontend_azure_pipeline'
  backRepository: 'abdmuksith/backend_azure_pipeline'
  azureAgent: 'ubuntu-latest'
  environment: 'production'
  selfHostedAgent: 'production_ubuntu_server' 
  frontServerPort: '8080'
  backServerPort: '3001'
  frontDockerfile: 'frontend-acc/Dockerfile'
  backDockerfile: 'backend-acc/Dockerfile'
  frontURL: 'https://accounts.front.opsdemo.xyz/'
  backURL: 'https://accounts.back.opsdemo.xyz/'
  frontTag: 'front$(Build.BuildId)'
  backTag: 'back$(Build.BuildId)'
  frontContainerName: 'acc_frontend_container'
  backContainerName: 'acc_backend_container'
  dockerRunOptions: '-itd'

##########################################################
# Azure DevOps Build and Push to Docker Hub registory CI #
##########################################################

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Images  on Azure runners Agent'
    jobs:
      - job: BuildAndPush
        displayName: 'Build and Push'
        pool:
          vmImage: $(azureAgent)
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: '$(containerRegistry)'
              repository: '$(backRepository)'
              command: 'buildAndPush'
              Dockerfile: '$(backDockerfile)'
              tags: '$(backTag)'

          - task: Docker@2
            inputs:
              containerRegistry: $(containerRegistry)
              repository: $(frontRepository):$(frontTag)
              command: 'buildAndPush'
              Dockerfile: $(frontDockerfile)
              tags: '$(frontTag)'

########################
# Self-hosted Agent CD #
########################

  - stage: PullAndRunDockerImages
    displayName: 'Pull and Run Docker Images on Self-hosted Agent'
    pool:
      name: $(selfHostedAgent)
    jobs:

###########
# backend #
###########


      - deployment: DeployBackend
        environment: $(environment)
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    docker stop $(backContainerName)
                    docker rm $(backContainerName)
                    docker pull $(dockerHubAccount)/$(backRepository):$(backTag)
                    docker run $(dockerRunOptions) --name $(backContainerName) -p $(backServerPort):3001 $(backRepository):$(backTag)
                    echo '### Backend container started:'
                    echo '### Check Docker Backend Container Domain URL $(backURL)'

############
# Frontend #
############


      - deployment: DeployFrontend
        environment: $(environment)
        dependsOn: DeployBackend
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo '### Starting CD process'
                    docker stop $(frontContainerName)
                    docker rm -f $(frontContainerName)
                    docker pull $(frontRepository):$(frontTag)
                    docker run $(dockerRunOptions) --name $(frontContainerName) -p $(frontServerPort):80 $(frontRepository):$(frontTag)
                    echo '### Frontend container started:'
                    echo '### Currently available and running containers'
                    docker ps -a
                    echo '### Removing all unused images'
                    docker image prune -a -f
                    echo '### Listing all available docker images'
                    docker images -a
                    echo '### Check Docker Frontend Container Domain URL $(frontURL)'
                    echo '### Done CD process'
